//////////////////
///CONNECTING////
//////////////////
==> npm install redux --save
==> npm install react-redux --save
==> npm install axios --save
//GO TO INDEX
==>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

import { Provider } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';//MUDDLEWARE WAIT UNTIL
import reducers from "./store/reducers";

const createStoreWithMiddleware = applyMiddleware()(createStore);


ReactDOM.render(
  <Provider store={createStoreWithMiddleware()}>
    <App />
  </Provider>,
  document.getElementById('root')
);
//CREATE STORE INSIDE CREATE FOLDER REDUCERS AND FOLDER ACTION
// CREATE INDEX.JS INSIDE FOLDER REDUCER TO COMBINE ALL REDUCER
// CREATE MOVIES_REDUCER.JS INSIDE FOLDER REDUCER
INDEX.JS BELOW
==>import { combineReducers } from 'redux';
import movies from './movies_reducer';// IMPORT ALL REDUCER HERE

const rootReducer = combineReducers({// THEN COMBINE REDUCER AS BELOW
    movies
    // USER
    // POST
});
export default rootReducer;
//////////////////
///REDUX DEVTOOLS/
//////////////////
==> npm install --save redux-promise
// INDEX.JS  BELOW
==>import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

import { Provider } from 'react-redux';
import { createStore, applyMiddleware, compose } from 'redux';
import reducers from './store/reducers';
import promiseMiddleware from 'redux-promise';

const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;
const createStoreWithMiddleware = composeEnhancers(
  applyMiddleware(promiseMiddleware)
)(createStore);

ReactDOM.render(
  <Provider store={createStoreWithMiddleware(reducers)}>
    <App />
  </Provider>,
  document.getElementById('root')
);

//// MOVIES_REDUCER.js  BELOW
==>const DEFAULT_STORE = {// STATE = DEFAULT_STORE
    userName:'Francis',
    userId:1234
}

                                  // PUT DEFAULT_STORE BELOW
export default function appReducer(state=DEFAULT_STORE,action){
    switch(action.type){
        case 'MOVIES_LIST':
            return action.payload
        default:
            return state
    }
}
/////////////
///ACTION////
/////////////
//INSIDE FOLDER ACTION  CREATE INDEX.JS
==>

export const moviesList = () => {
    return {
        type:'MOVIES_LIST',// MOVIES_LIST FROM MOVIES_REDUCER
        payload:[
            {id:1,name:'Pulp fiction'},
            {id:2,name:'Pacific Rim'},
            {id:3,name:'Rambo'}
        ]
    }
}
// HOME.JS
==>import React,{ Component } from 'react';
import { connect } from 'react-redux';// CONNECT
import { moviesList } from '../store/actions';

class Home extends Component{

    getMoviesHandler(){
        this.props.dispatch(moviesList())// DISPATCH NEED ACTION.JS
        // DISPATCH SENT TO MOVIES_REDUCER.JS

    }

    render(){
        console.log(this.props)// CONNECT INJET PROPS AND HAVE DISPATCH
        return(
            <>
                <button onClick={()=> this.getMoviesHandler()}>
                    Get movies
                </button>
            </>
        )
    }
}

export default connect()(Home);//CONNECT WILL INJET PROPS IN HOME

// MOVIES_REDUCER.JS BELOW
==>const DEFAULT_STORE = {
    userName:'Francis',
    userId:1234
}
export default function appReducer(state=DEFAULT_STORE,action){
    switch(action.type){
        case 'MOVIES_LIST':
            return {...state, moviesList: action.payload }
        default:
            return state
    }
}
////////////////////////
//GET DATA FROM STORE///
////////////////////////
==>import React,{ Component } from 'react';
import { connect } from 'react-redux';
import { moviesList } from '../store/actions';

class Home extends Component{

    getMoviesHandler(){
        this.props.dispatch(moviesList())
    }

    render(){
        console.log(this.props);// GIVE PROPS MOVIES
        const { movies } = this.props;
        return(
            <>
                { movies && movies.moviesList ?
                    movies.moviesList.map( item =>(// GET DATA HERE
                        <div key={item.name}>
                            name: {item.name}
                        </div>
                    ))
                :null}
                <button onClick={()=> this.getMoviesHandler()}>
                    Get movies
                </button>
            </>
        )
    }
}

const mapStateToProps = (state) => {// GET DATA WITH MAPSTATETOPROPS
    return { movies: state.movies }
}

export default connect(mapStateToProps)(Home);// IN CHARGE GOING TO STORE STATE
/////////////////
// REDUX HOOKS///
/////////////////
//FIRST CREATE ACTION IN INDEX.JS BELOW
==>export const movieData = () => {
    return {
        type:'MOVIE_DATA',// TYPE WILL USE IN REDUCER
        payload:{
            id:1,
            name:'Pulp fiction',
            actors:['Travolta','Thurman'],
            year:1990,
            director:'Tarantino'
        }
    }
}
// NOW GO TO REDUCER
==>    case 'MOVIE_DATA':// FROM ACTION TYPE
        return {...state, movieData: action.payload }
    default:
        return state
// GO TO MOVIES.JS
==>import React from 'react';
import { useDispatch, useSelector } from 'react-redux';
// USEDISPATCH DISPACTCH ACTION
//USESELECTOR IS MAPSTATETOPROPS
import { movieData } from '../store/actions';// IMPORT ACTION

const Movie = (props) => {
    const movies = useSelector( state => state.movies );// MOVIES = movies:
    //USESELECTOR =  state.movies   STATE
    const dispatch = useDispatch();


    const getMovie = () => {
        dispatch(movieData())// MOVIEDATA IS ACTION
    }

    console.log(movies)
    return(
        <>
            { movies && movies.movieData ?// SHOW DATA
                <div>
                    <div>Name:{movies.movieData.name}</div>
                    <div>Director:{movies.movieData.director}</div>
                    <div>Year:{movies.movieData.year}</div>
                </div>
            :null}
            <button onClick={() => getMovie()}>
                    Get movie
            </button>
        </>
    )
}
export default Movie;

// import React from 'react';  METHODE 1  NO HOOKS
// import { connect } from 'react-redux';

// const Movie = (props) => {

//     console.log(props)
//     return(
//         <>
//         Movie
//         </>
//     )
// }

// const mapStateToProps = (state) => { YOU GET DATA
//     return { movies: state.movies }
// }

// export default connect(mapStateToProps)(Movie);
/////////////////
//// TYPES /////
/////////////////
